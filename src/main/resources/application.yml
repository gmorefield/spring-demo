spring:
    application:
        name: spring-demo
        admin:
            enabled: false
    lifecycle:
        timeout-per-shutdown-phase: 20s
    liquibase:
        enabled: true
        change-log: classpath:liquibase/master.xml
#        contexts: ${spring.profiles.active}
    sql:
        init:
            mode: never
            platform: h2
    jmx:
        enabled: false
    main:
        banner-mode: console
    datasource:
        driver-class-name: org.h2.Driver
        url: jdbc:h2:mem:props
        username: sa
        password: ${db.password}
        pool-size: 30

        # jdbc-url and maximum-pool-size used by HikariDataSource
        jdbc-url: ${spring.datasource.url}
        maximum-pool-size: ${spring.datasource.pool-size}

        # hikari settings only used by default spring profile
        hikari:
            maximum-pool-size: ${spring.datasource.pool-size}
            auto-commit: true
    autoconfigure:
        exclude: "org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration,org.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration"

    cloud:
        kubernetes:
            enabled: false
            config:
              enabled: true
            reload:
                enabled: true
                strategy: refresh #shutdown
                mode: event
                # namespaces:
                # - my-namespace
            leader:
              config-map-name: spring-demo-leader
        vault:
          enabled: false
        discovery:
          enabled: false
          client:
              composite-indicator:
                enabled: false

    quartz:
      auto-startup: true
#      scheduler-name: quartzClusteredScheduler
      job-store-type: jdbc
      # to prefer jobs read from database rather than configuration (default=false)
      overwrite-existing-jobs: false
      startup-delay: 30s
      jdbc:
        initialize-schema: never
#      wait-for-jobs-to-complete-on-shutdown: false
      properties:
        org:
          quartz:
            scheduler:
              skipUpdateCheck: true
              instanceId: AUTO
              instanceIdGenerator:
                class: org.quartz.simpl.HostnameInstanceIdGenerator
            #              shutdownHook: true
#              makeSchedulerThreadDaemon: true
#              interruptJobsOnShutdown: true
#            plugin:
#              shutdownhook:
#                class: org.quartz.plugins.management.ShutdownHookPlugin
#                cleanShutdown: true
            jobStore:
#              driverDelegateClass: org.quartz.impl.jdbcjobstore.MSSQLDelegate
#              isClustered: true
#              misfireThreshold: 60000
              # useProperties controls whether JobDataMaps should store values as strings or as serialized Java objects
              useProperties: true
              clusterCheckinInterval: 20000
#              clusterCheckinTimeout: 60000
#            threadPool: #Connection Pool
#              class: org.quartz.simpl.SimpleThreadPool
#              threadCount: 10
#              threadPriority: 5
#              threadsInheritContextClassLoaderOfInitializingThread: true
#              makeThreadDaemons: true


          # setting to JobStoreTX causes startup to fail
#        "org.quartz.jobStore.class": org.quartz.impl.jdbcjobstore.JobStoreTX

# control logging levels
logging:
  level:
    root: info
    "[org.springframework]": info
    "[org.springframework.ws]": info
    # "[org.springframework.boot.autoconfigure.logging]": info

# management properties to control actuators exposed
management:
    cloudfoundry:
        enabled: false
    security:
        enabled: false
    endpoints:
        enabled-by-default: false
        web:
            exposure:
                include:
                - health
                - info
                - refresh
            # cors:
            #     allowed-origins: http://example.com
            #     allowed-methods: GET,POST
    endpoint:
        info:
            enabled: true
        health:
            enabled: true
            show-details: always
            show-components: always
            probes:
                enabled: true
        refresh:
            enabled: true
    health:
        livenessState:
            enabled: true
        readinessState:
            enabled: true
    info:
        build:
            enabled: true
        git:
            enabled: true
            mode: simple
        env:
            enabled: true
        java:
            enabled: true

# properties to control tomcat server
server:
    shutdown: graceful
    compression:
        enabled: true
    http2:
        enabled: true
    port: 8080
    session-timeout: 1800
    max-threads: 50

# all info.* properties show in /actuator/info
info:
    app:
        name: ${spring.application.name}
        type: demo
    build:
        artifact: ${project.artifactId}
        name: ${project.name}
        description: ${project.description}
        version: ${project.version}

# custom application configuration
sample:
    env: poc
    commandLine:
        delay: 5
    datasource:
        driver-class-name: org.h2.Driver
        url: jdbc:h2:mem:custom
        username: sa
        password: ${db.password}
        # jdbc-url is needed for Hikari
        jdbc-url: ${sample.datasource.url}
        maximum-pool-size: ${spring.datasource.pool-size}
    hikari:
        datasource:
            driver-class-name: org.h2.Driver
            url: jdbc:h2:mem:hikari
            username: sa
            password: ${db.password}
           # jdbc-url is needed for Hikari
            jdbc-url: ${sample.hikari.datasource.url}
            maximum-pool-size: ${spring.datasource.pool-size}
    task:
        free-memory:
            enabled: false
    # multipart:
    #     maxUploadSize: 500